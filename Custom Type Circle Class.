#Custom Type# # Circle Class #

class Circle:
    """ Represent a geometric circle object """
    def __init__(self, center, radius):
        """ Initalize the centre's centre and radius """
        # Disallow a negative radius 
        if radius < 0:
            raise ValueError('Negative radius')
        self.center = center
        self.radius = radius
    
    def get_radius(self):
        """ Return the radius of the circle """
        return self.radius
    
    def get_center(self):
        """ Return the coordinates of the center """
        return self.center
    
    def get_area(self):
        """ Compute and return the area of the circle """
        from math import pi
        return pi*self.radius*self.radius
    
    def get_circumfrence(self):
        """ Compute and return the circumference of the circle """
        from math import pi
        return 2*pi*self.radius
    
    def move(self, pt):
        """ Move the center of the circle to the point pt """
        self.center = pt
    
    def grow(self):
        """ Incerases the radius of the circle """
        self.radius += 1

    def shrink(self):
        """ Decrease the radius of the circle; does not affects a circle with radius zero """
        if self.radius > 0:
            self.radius -= 1
